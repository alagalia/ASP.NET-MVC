@using Microsoft.AspNet.Identity
@{ string role = ""; };
@if (User.IsInRole("Admin"))
            {
                role = "Administrator";
            }
            else if (@User.IsInRole("Promoter"))
            {
                role = "Promoter";
            }
            else if (@User.IsInRole("Visitor"))
            {
                role = "Visitor";
            }
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <ul class="nav navbar-nav navbar-right">
            
            @if (User.IsInRole("Administrator") || User.IsInRole("Promoter"))
            {
                <li>@Html.ActionLink("Add event", "Create", "Events")</li>
                <li>@Html.ActionLink("My events", "MyEvents", "Events")</li>
                <li>@Html.ActionLink("Edit profile", "EditProfile", "Promoters")</li>
            }
            @if (User.IsInRole("Visitor"))
            {
                <li>@Html.ActionLink("My enrolled events", "MyEvents", "Visitors")</li>
            }

            <li>
                @Html.ActionLink(User.Identity.GetUserName() +" : " + role, "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
            </li>
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
